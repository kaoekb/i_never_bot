# bot/database.py
from pymongo import MongoClient, errors
from config import MONGO_URI
import logging
import time

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–¥—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ –≤ main.py
client = None
db = None
users_collection = None
ads_collection = None
stats_collection = None

def connect_to_mongo(bot=None):
    from bot.utils import notify_admin
    while True:
        try:
            client = MongoClient(MONGO_URI, serverSelectionTimeoutMS=5000)
            client.server_info()
            logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB")
            return client
        except errors.ServerSelectionTimeoutError:
            logger.error("1‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            time.sleep(5)
        except Exception as e:
            logger.critical("1‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ MongoDB: %s", str(e))
            if bot:
                notify_admin(bot, f"1‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:\n{e}")
            time.sleep(5)

def log_collections_summary():
    global users_collection, ads_collection, stats_collection
    try:
        users_count = users_collection.count_documents({})
        ads_count = ads_collection.count_documents({})
        stats_count = stats_collection.count_documents({})
        logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π: Users={users_count}, Ads={ads_count}, Stats={stats_count}")
    except Exception as e:
        logger.error("‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π: %s", str(e))
